name: Terraform Pipeline

on:
  push:
    branches:
      - main # Пайплайн запускается при пуше в ветку main
  workflow_dispatch: # Позволяет вручную запускать пайплайн

env:
  TF_IN_AUTOMATION: "true" # Указывает Terraform, что он работает в автоматическом режиме
  TF_INPUT: "false"        # Отключает запросы ввода от пользователя

jobs:
  init_and_plan:
    name: Terraform Init and Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3 # Клонируем репозиторий

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2 # Устанавливаем Terraform
        with:
          terraform_version: 1.5.7 # Укажите версию Terraform (замените на нужную)

      - name: Terraform Init
        run: terraform init # Инициализация Terraform

      - name: Terraform Plan
        run: terraform plan -out=plan.tfplan # Создаем план и сохраняем его в файл

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v3 # Загружаем план как артефакт
        with:
          name: terraform-plan
          path: plan.tfplan

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: init_and_plan # Эта задача зависит от успешного выполнения init_and_plan
    if: ${{ github.event_name == 'workflow_dispatch' }} # Запуск только вручную
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Download Plan Artifact
        uses: actions/download-artifact@v3 # Загружаем ранее сохраненный артефакт
        with:
          name: terraform-plan

      - name: Terraform Apply
        run: terraform apply plan.tfplan # Применяем изменения

  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }} # Запуск только вручную
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Destroy
        run: terraform destroy -auto-approve # Удаление инфраструктуры без подтверждения
