name: Terraform Yandex Cloud Pipeline

on:
  push:
    branches:
      - main # Автоматический запуск при пуше в ветку main
  workflow_dispatch: # Возможность ручного запуска для apply и destroy

env:
  TF_IN_AUTOMATION: "true" # Указывает Terraform, что он работает в автоматическом режиме
  TF_INPUT: "false"        # Отключает запросы ввода от пользователя

jobs:
  init_and_plan:
    name: Terraform Init and Plan
    runs-on: ubuntu-latest
    steps:
      # Шаг 1: Клонируем репозиторий
      - name: Checkout Code
        uses: actions/checkout@v3

      # Шаг 2: Устанавливаем Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7 # Укажите версию Terraform

      # Шаг 3: Настраиваем переменные окружения для Yandex Cloud
      - name: Configure Yandex Cloud Credentials
        run: |
          export YC_TOKEN=${{ secrets.YC_TOKEN }}
          export YC_CLOUD_ID=${{ secrets.YC_CLOUD_ID }}
          export YC_FOLDER_ID=${{ secrets.YC_FOLDER_ID }}

      # Шаг 4: Инициализация Terraform
      - name: Terraform Init
        run: terraform init

      # Шаг 5: Генерация плана изменений
      - name: Terraform Plan
        run: terraform plan -out=plan.tfplan

      # Шаг 6: Сохранение файла плана как артефакта
      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: plan.tfplan

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: init_and_plan # Эта задача зависит от успешного выполнения init_and_plan
    if: ${{ github.event_name == 'workflow_dispatch' }} # Запуск только вручную
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure Yandex Cloud Credentials
        run: |
          export YC_TOKEN=${{ secrets.YC_TOKEN }}
          export YC_CLOUD_ID=${{ secrets.YC_CLOUD_ID }}
          export YC_FOLDER_ID=${{ secrets.YC_FOLDER_ID }}

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan

      - name: Terraform Apply
        run: terraform apply plan.tfplan

  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }} # Запуск только вручную
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Configure Yandex Cloud Credentials
        run: |
          export YC_TOKEN=${{ secrets.YC_TOKEN }}
          export YC_CLOUD_ID=${{ secrets.YC_CLOUD_ID }}
          export YC_FOLDER_ID=${{ secrets.YC_FOLDER_ID }}

      - name: Terraform Destroy
        run: terraform destroy -auto-approve # Удаление инфраструктуры без подтверждения
